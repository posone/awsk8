version: 0.2     
env:
  variables:
    NAME: "posone-kops-cluster.k8s.local"
    KOPS_STATE_PREFIX: "posone-kops-bucket"
phases:
  install:
    commands:
      - echo Entered the install phase...
      - apt-get update -y
      - apt-get install -y awscli
      - apt-get install -y git  
      - apt-get install -y wget unzip iputils-ping
      #kops install
      - curl -LO https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '"' -f 4)/kops-linux-amd64
      - chmod +x kops-linux-amd64
      - mv kops-linux-amd64 /usr/local/bin/kops
      - export KOPS_STATE_STORE="s3://${KOPS_STATE_PREFIX}"
      - export AWS_REGION_AZS=$(aws ec2 describe-availability-zones --region $AWS_REGION --query 'AvailabilityZones[0:3].ZoneName' --output text | sed 's/\t/,/g')
      - export AWS_ONE_ZONE=$(echo $AWS_REGION_AZS| cut -d ',' -f1)
    finally:
      - echo This always runs even if the update or install command fails 
  
  build:
    commands:
      - aws s3api create-bucket --bucket ${KOPS_STATE_PREFIX} --region ${AWS_REGION} --create-bucket-configuration LocationConstraint=${AWS_REGION}
      - aws s3 ls
      - pwd; ls -la
      - kops version
      - echo ${NAME} ${KOPS_STATE_PREFIX} ${KOPS_STATE_STORE} ${AWS_REGION} ${AWS_ONE_ZONE}  ${AWS_REGION_AZS}
      - echo "000000000000"
      - |
        kops create cluster \
        --name ${NAME} \
        --state ${KOPS_STATE_STORE} \
        --cloud aws \
        --master-size m5.large \
        --master-count 1 \
        --master-zones ${AWS_REGION_AZS} \
#if define one master - one zone only        
        --zones ${AWS_ONE_ZONE} \
        --node-size t3.large \
        --node-count 2 \
        --dns private 
      - aws s3 ls --recursive ${KOPS_STATE_STORE}
      - kops update cluster --state=${KOPS_STATE_STORE} --name=${NAME} --yes --admin
      - kops validate cluster --wait 10m
      - aws s3 cp ~/.kube/config ${KOPS_STATE_STORE}/kubeconfig
      - aws s3 cp ~/.ssh/id_rsa ${KOPS_STATE_STORE}/priv_key
      